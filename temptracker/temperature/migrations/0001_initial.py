# Generated by Django 5.1.11 on 2025-06-16 00:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MonitorSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(help_text='Nome da localidade a ser monitorada.', max_length=255, verbose_name='Nome da Localidade')),
                ('latitude', models.FloatField(help_text='Latitude da localidade para monitoramento.', verbose_name='Latitude')),
                ('longitude', models.FloatField(help_text='Longitude da localidade para monitoramento.', verbose_name='Longitude')),
                ('temperature_limit_celsius', models.FloatField(help_text='Temperatura em Celsius que, se excedida, dispara um alerta.', verbose_name='Limite de Temperatura (°C)')),
                ('monitoring_interval_minutes', models.IntegerField(help_text='Frequência (em minutos) com que a temperatura será verificada.', verbose_name='Intervalo de Monitoramento (minutos)')),
                ('is_active', models.BooleanField(default=True, help_text='Se selecionado, o monitoramento para esta localidade será ativado automaticamente.', verbose_name='Ativar Monitoramento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Configuração de Monitoramento',
                'verbose_name_plural': 'Configurações de Monitoramento',
                'ordering': ['location_name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_temperature_celsius', models.FloatField(help_text='Temperatura que disparou o alerta.', verbose_name='Temperatura do Alerta (°C)')),
                ('alert_timestamp', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que o alerta foi disparado.', verbose_name='Data/Hora do Alerta')),
                ('monitor_setting', models.ForeignKey(help_text='Configuração de monitoramento que gerou este alerta.', on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='temperature.monitorsetting', verbose_name='Configuração do Monitor')),
            ],
            options={
                'verbose_name': 'Alerta de Temperatura',
                'verbose_name_plural': 'Alertas de Temperatura',
                'ordering': ['-alert_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TemperatureReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature_celsius', models.FloatField(help_text='Temperatura em graus Celsius.', verbose_name='Temperatura (°C)')),
                ('latitude', models.FloatField(help_text='Latitude da localidade da leitura.', verbose_name='Latitude')),
                ('longitude', models.FloatField(help_text='Longitude da localidade da leitura.', verbose_name='Longitude')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que a leitura foi registrada.', verbose_name='Data/Hora da Leitura')),
                ('monitor_setting', models.ForeignKey(help_text='Configuração de monitoramento à qual esta leitura pertence.', on_delete=django.db.models.deletion.CASCADE, related_name='temperature_readings', to='temperature.monitorsetting', verbose_name='Configuração do Monitor')),
            ],
            options={
                'verbose_name': 'Leitura de Temperatura',
                'verbose_name_plural': 'Leituras de Temperatura',
                'ordering': ['-timestamp'],
            },
        ),
    ]
